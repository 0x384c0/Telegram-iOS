
headers = [
    "turbojpeg.h",
    "jpeglib.h",
    "jmorecfg.h",
]

libs = [
    "jpeg",
    "turbojpeg"
]

genrule(
    name = "libmozjpeg_build",
    srcs = glob([
        "mozjpeg/**/*",
    ], exclude = ["mozjpeg/**/.*"]) + [
        "build-mozjpeg-buck.sh",
    ],
    bash =
cmd_bash = 
    """
    set -ex

    BUILD_ARCH="arm64"

    mkdir -p "$OUT"

    BUILD_DIR="$(OUT)/build_$${BUILD_ARCH}"
    rm -rf "$BUILD_DIR"
    mkdir -p "$BUILD_DIR"

    CMAKE_DIR="$(location //third-party/cmake:cmake)/cmake-3.16.0"

    cp $(location :build-mozjpeg-buck.sh) "$BUILD_DIR/"

    SOURCE_PATH="third-party/mozjpeg/mozjpeg"

    cp -R "$SRCDIR/mozjpeg" "$BUILD_DIR/"

    mkdir -p "$BUILD_DIR/Public/mozjpeg"

    PATH="$PATH:$CMAKE_DIR/bin" sh $BUILD_DIR/build-mozjpeg-bazel.sh $BUILD_ARCH "$BUILD_DIR/mozjpeg" "$BUILD_DIR"
    """,
    out = "libmozjpeg",
    visibility = [
        "PUBLIC",
    ]
)

apple_library(
    name = "mozjpeg_lib",
    visibility = [
        "//third-party/mozjpeg:mozjpeg"
    ],
    header_namespace = "ffmpeg",
    exported_headers = ffmpeg_header_targets,
    linker_flags = [
        "-L$(location :libmozjpeg_build)/lib",
        "-ljpeg",
        "-lturbojpeg",
    ],
    exported_linker_flags = [
        "-L$(location :libmozjpeg_build)/lib",
        "-ljpeg",
        "-lturbojpeg",
    ],
    deps = [
        ":libmozjpeg_build",
    ],
)

mozjpeg_header_targets = gen_header_targets(headers, "libmozjpeg_header_", "", "libmozjpeg_build", "mozjpeg/include")

static_library(
    name = "mozjpeg",
    exported_headers = merge_maps([
        mozjpeg_header_targets,
    ]),
    deps = [
        ":libmozjpeg_build",
        ":mozjpeg_lib",
    ],
    frameworks = [
        "$SDKROOT/System/Library/Frameworks/Foundation.framework",
    ],
)